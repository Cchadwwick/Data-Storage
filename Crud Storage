    
pragma solidity >=0.4.0 <0.6.0;

contract Crud {
    
    struct User{ 
        uint id;
        string name;
        uint age;
    }
    
    User[] users;
    uint nextId = 1;
    
    function create(string memory name, uint age) public {
        users.push(User(nextId, name, age));
        nextId++;
    }
    
    function read(uint id) view public returns(uint, string memory, uint) {
        uint i = find(id);
        return(users[i].id, users[i].name, users[i].age);
    }
    
    function update(uint id, string memory name, uint age) public  {
        uint i = find(id);
        users[i].name = name;
        users[i].age = age;
    }
    
    function destroy(uint id) public {
        uint i = find(id);
        delete users[i];
    }
    
    function find(uint id) view internal returns(uint){
        for(uint i = 0; i < users.length; i++) {
            if(users[i].id == id) {
                return i;
            }
        }
    revert('User does not exist!');
    }
}


// struct is like an object with just properties and no methods
// revert is a solidity function that allows you to throw a customized error
